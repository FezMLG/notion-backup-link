name: Build and Deploy image

on:
  push:
    branches:
      - master

jobs:
  verify_release_tags:
    name: Verify release tags
    runs-on: ubuntu-latest
    outputs:
      has_tablet_version_tag: ${{ steps.verify_tablet_tag.outputs.has_tag }}
      tablet_version: ${{ steps.set_tablet_version.outputs.version }}

    steps:
      - uses: actions/checkout@v1

  publish_tablet_image:
    name: Publish tablet image
    needs:
      - test_and_build
      - verify_release_tags
    if: ${{ needs.verify_release_tags.outputs.has_tablet_version_tag == 'yes' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Prepare image tag
        id: prepare_image_tag
        run: |
          version=$(jq -r .version ./package.json)
          n8n_version=$(jq -r .n8n-version ./package.json)
          VERSION="v2-${n8n-version}-${version}"
          IMAGE="683390223851.dkr.ecr.eu-west-1.amazonaws.com/elp-prod-n8n"
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tagged_image::${IMAGE}:${VERSION}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to ecr
        run: aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 683390223851.dkr.ecr.eu-west-1.amazonaws.com

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Publish image
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: Dockerfile
          target: runner
          tags: ${{ steps.prepare_image_tag.outputs.tagged_image }}
          build-args: |
            VERSION=${{ steps.prepare_image_tag.outputs.version }}
          push: true
